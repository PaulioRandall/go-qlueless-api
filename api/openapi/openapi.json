{
	"openapi": "3.0.2",
	"info": {
		"title": "Go Qlueless Assembly API",
		"version": "0.0.1"
  },
  "tags": [
    {
      "name": "venture",
      "description": "All available Venture specific operations."
    },
    {
      "name": "order",
      "description": "All available Order specific operations."
    },
    {
      "name": "batch",
      "description": "All available Batch specific operations."
    }
  ],
	"paths": {
		"/openapi": {
		  "get": {
		    "description": "Returns this OpenAPI specification.",
		    "responses": {
		      "200": {
		        "description": "OpenAPI specification.",
		        "content": {
		          "application/vnd.oai.openapi+json": {
		          }
		        },
		        "headers": {
		          "$ref": "#/components/x-hidden/defaultHeaders"
		        }
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  }
		},
		"/changelog": {
		  "get": {
		    "description": "Returns the API changelog.",
		    "responses": {
		      "200": {
		        "description": "Changelog.",
		        "content": {
		          "text/markdown": {
		          }
		        },
		        "headers": {
		          "$ref": "#/components/x-hidden/defaultHeaders"
		        }
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  }
		},
		"/ventures": {
		  "get": {
		    "tags": ["venture"],
		    "description": "Returns all Ventures.",
		    "parameters": [
		      {
		        "$ref": "#/components/parameters/wrap"
		      },
		      {
		        "$ref": "#/components/parameters/venture_id"
		      }
		    ],
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/ventures_or_venture_wrappable_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "post": {
		    "tags": ["venture"],
		    "description": "Creates a new Venture.",
		    "requestBody": {
		      "$ref": "#/components/requestBodies/venture_create"
		    },
		    "responses": {
		      "201": {
		        "$ref": "#/components/responses/venture_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "put": {
		    "tags": ["venture"],
		    "description": "Updates a Venture.",
		    "requestBody": {
		      "$ref": "#/components/requestBodies/venture_update"
		    },
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/venture_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "delete": {
		    "tags": ["venture"],
		    "description": "Deletes a Venture.",
		    "parameters": [
		      {
		        "$ref": "#/components/parameters/venture_id"
		      }
		    ],
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/venture_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  }
		},
		"/orders": {
		  "get": {
		    "tags": ["order"],
		    "description": "Returns all Orders.",
		    "parameters": [
		      {
		        "$ref": "#/components/parameters/wrap"
		      },
		      {
		        "$ref": "#/components/parameters/order_id"
		      }
		    ],
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/orders_or_order_wrappable_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "post": {
		    "tags": ["order"],
		    "description": "Creates a new Order.",
		    "requestBody": {
		      "$ref": "#/components/requestBodies/order_create"
		    },
		    "responses": {
		      "201": {
		        "$ref": "#/components/responses/order_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "put": {
		    "tags": ["order"],
		    "description": "Updates a Order.",
		    "requestBody": {
		      "$ref": "#/components/requestBodies/order_update"
		    },
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/order_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "delete": {
		    "tags": ["order"],
		    "description": "Deletes an Order.",
		    "parameters": [
		      {
		        "$ref": "#/components/parameters/order_id"
		      }
		    ],
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/order_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  }
		},
		"/batches": {
		  "get": {
		    "tags": ["batch"],
		    "description": "Returns all Batches.",
		    "parameters": [
		      {
		        "$ref": "#/components/parameters/wrap"
		      },
		      {
		        "$ref": "#/components/parameters/batch_id"
		      }
		    ],
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/batches_or_batch_wrappable_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "post": {
		    "tags": ["batch"],
		    "description": "Creates a new Batch.",
		    "requestBody": {
		      "$ref": "#/components/requestBodies/batch_create"
		    },
		    "responses": {
		      "201": {
		        "$ref": "#/components/responses/batch_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "put": {
		    "tags": ["batch"],
		    "description": "Updates a Batch.",
		    "requestBody": {
		      "$ref": "#/components/requestBodies/batch_update"
		    },
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/batch_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  },
		  "delete": {
		    "tags": ["batch"],
		    "description": "Deletes a Batch.",
		    "parameters": [
		      {
		        "$ref": "#/components/parameters/batch_id"
		      }
		    ],
		    "responses": {
		      "200": {
		        "$ref": "#/components/responses/batch_200"
		      },
		      "default": {
		        "$ref": "#/components/responses/error"
		      }
		    }
		  }
		}
  },
	"components": {
    "parameters": {
			"venture_id": {
			  "name": "id",
			  "in": "query",
			  "description": "Unique identifier of a Venture.",
			  "required": false,
			  "schema": {
			    "$ref": "#/components/x-hidden/venture_id"
			  }
			},
			"order_id": {
			  "name": "order_id",
			  "in": "query",
			  "description": "Unique identifier of an Order.",
			  "required": false,
			  "schema": {
			    "$ref": "#/components/x-hidden/order_id"
			  }
			},
			"batch_id": {
			  "name": "batch_id",
			  "in": "query",
			  "description": "Unique identifier of a Batch.",
			  "required": false,
			  "schema": {
			    "$ref": "#/components/x-hidden/batch_id"
			  }
			},
			"wrap": {
			  "name": "wrap",
			  "in": "query",
			  "description": "If present wraps the response and adds meta information.",
			  "required": false,
			  "schema": {
			    "type": "string"
			  }
			}
    },
    "requestBodies": {
			"venture_create": {
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/venture_create"
			      }
			    }
			  }
			},
			"venture_update": {
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/venture_update"
			      }
			    }
			  }
			},
			"order_create": {
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/order_create"
			      }
			    }
			  }
			},
			"order_update": {
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/order_update"
			      }
			    }
			  }
			},
			"batch_create": {
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/batch_create"
			      }
			    }
			  }
			},
			"batch_update": {
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/batch_update"
			      }
			    }
			  }
			}
    },
    "responses": {
			"ventures_or_venture_wrappable_200": {
			  "description": "List of Ventures or a single Venture.",
			  "content": {
			    "application/json": {
			      "schema": {
			        "oneOf": [
			          {
			            "$ref": "#/components/x-hidden/ventures_wrapped"
			          },
			          {
			            "$ref": "#/components/x-hidden/ventures_array"
			          },
			          {
			            "$ref": "#/components/x-hidden/venture_wrapped"
			          },
			          {
			            "$ref": "#/components/schemas/venture"
			          }
			        ]
			      }
			    }
			  },
			  "headers": {
			    "$ref": "#/components/x-hidden/defaultHeaders"
			  }
			},
			"venture_200": {
			  "description": "Single Venture.",
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/venture"
			      }
			    }
			  },
			  "headers": {
			    "$ref": "#/components/x-hidden/defaultHeaders"
			  }
			},
			"orders_or_order_wrappable_200": {
			  "description": "List of Orders or a single Order.",
			  "content": {
			    "application/json": {
			      "schema": {
			        "oneOf": [
			          {
			            "$ref": "#/components/x-hidden/orders_wrapped"
			          },
			          {
			            "$ref": "#/components/x-hidden/orders_array"
			          },
			          {
			            "$ref": "#/components/x-hidden/order_wrapped"
			          },
			          {
			            "$ref": "#/components/schemas/order"
			          }
			        ]
			      }
			    }
			  },
			  "headers": {
			    "$ref": "#/components/x-hidden/defaultHeaders"
			  }
			},
			"order_200": {
			  "description": "Single Order.",
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/order"
			      }
			    }
			  },
			  "headers": {
			    "$ref": "#/components/x-hidden/defaultHeaders"
			  }
			},
			"batches_or_batch_wrappable_200": {
			  "description": "List of Batches or a single Batch.",
			  "content": {
			    "application/json": {
			      "schema": {
			        "oneOf": [
			          {
			            "$ref": "#/components/x-hidden/batches_wrapped"
			          },
			          {
			            "$ref": "#/components/x-hidden/batches_array"
			          },
			          {
			            "$ref": "#/components/x-hidden/batch_wrapped"
			          },
			          {
			            "$ref": "#/components/schemas/batch"
			          }
			        ]
			      }
			    }
			  },
			  "headers": {
			    "$ref": "#/components/x-hidden/defaultHeaders"
			  }
			},
			"batch_200": {
			  "description": "Single Batch.",
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/batch"
			      }
			    }
			  },
			  "headers": {
			    "$ref": "#/components/x-hidden/defaultHeaders"
			  }
			},
			"error": {
			  "description": "Client or service error.",
			  "content": {
			    "application/json": {
			      "schema": {
			        "$ref": "#/components/schemas/error"
			      }
			    }
			  },
			  "headers": {
			    "$ref": "#/components/x-hidden/defaultHeaders"
			  }
			}
    },
		"schemas": {
			"venture_create": {
			  "type": "object",
			  "required": [
			    "description",
			    "state"
			  ],
			  "properties": {
			    "description": {
			      "$ref": "#/components/x-hidden/description"
			    },
			    "state": {
			      "$ref": "#/components/x-hidden/state"
			    },
			    "order_ids": {
			      "$ref": "#/components/x-hidden/order_id_csv"
			    },
			    "extra": {
			      "$ref": "#/components/x-hidden/extra"
			    }
			  }
			},
			"venture_update": {
			  "type": "object",
			  "required": [
			    "set",
			    "values"
			  ],
			  "properties": {
			    "set": {
			      "type": "string",
			      "description": "CSV of properties to update; pick one or many of 'description', 'state', 'is_alive', 'order_ids', and 'extra'"
			    },
			    "values": {
			      "$ref": "#/components/schemas/venture"
			    }
			  }
			},
			"venture": {
			  "type": "object",
			  "required": [
			    "venture_id",
			    "description",
			    "state"
			  ],
			  "properties": {
			    "venture_id": {
			      "$ref": "#/components/x-hidden/venture_id"
			    },
			    "description": {
			      "$ref": "#/components/x-hidden/description"
			    },
			    "state": {
			      "$ref": "#/components/x-hidden/state"
			    },
			    "order_ids": {
			      "$ref": "#/components/x-hidden/order_id_csv"
			    },
			    "is_alive": {
			      "$ref": "#/components/x-hidden/is_alive"
			    },
			    "extra": {
			      "$ref": "#/components/x-hidden/extra"
			    }
			  }
			},
			"order_create": {
			  "type": "object",
			  "required": [
			    "description",
			    "state"
			  ],
			  "properties": {
			    "description": {
			      "$ref": "#/components/x-hidden/description"
			    },
			    "state": {
			      "$ref": "#/components/x-hidden/state"
			    },
			    "batch_ids": {
			      "$ref": "#/components/x-hidden/batch_id_csv"
			    },
			    "extra": {
			      "$ref": "#/components/x-hidden/extra"
			    }
			  }
			},
			"order_update": {
			  "type": "object",
			  "required": [
			    "order_id",
			    "set",
			    "values"
			  ],
			  "properties": {
			    "order_id": {
			      "$ref": "#/components/x-hidden/order_id"
			    },
			    "set": {
			      "type": "array",
			      "description": "List of properties to update.",
			      "items": {
			        "type": "string",
			        "enum": [
			          "description",
			          "state",
			          "is_alive",
			          "batch_ids",
			          "extra"
			        ]
			      }
			    },
			    "values": {
			      "type": "object",
			      "description": "Updated values for the properties.",
			      "properties": {
			        "description": {
			          "$ref": "#/components/x-hidden/description"
			        },
			        "state": {
			          "$ref": "#/components/x-hidden/state"
			        },
			        "is_alive": {
			          "$ref": "#/components/x-hidden/is_alive"
			        },
			        "batch_ids": {
			          "$ref": "#/components/x-hidden/batch_id_csv"
			        },
			        "extra": {
			          "$ref": "#/components/x-hidden/extra"
			        }
			      }
			    }
			  }
			},
			"order": {
			  "type": "object",
			  "required": [
			    "order_id",
			    "description",
			    "state"
			  ],
			  "properties": {
			    "order_id": {
			      "$ref": "#/components/x-hidden/order_id"
			    },
			    "description": {
			      "$ref": "#/components/x-hidden/description"
			    },
			    "state": {
			      "$ref": "#/components/x-hidden/state"
			    },
			    "is_alive": {
			      "$ref": "#/components/x-hidden/is_alive"
			    },
			    "batch_ids": {
			      "$ref": "#/components/x-hidden/batch_id_csv"
			    },
			    "extra": {
			      "$ref": "#/components/x-hidden/extra"
			    }
			  }
			},
			"batch_create": {
			  "type": "object",
			  "required": [
			    "description",
			    "state"
			  ],
			  "properties": {
			    "description": {
			      "$ref": "#/components/x-hidden/description"
			    },
			    "state": {
			      "$ref": "#/components/x-hidden/state"
			    },
			    "extra": {
			      "$ref": "#/components/x-hidden/extra"
			    }
			  }
			},
			"batch_update": {
			  "type": "object",
			  "required": [
			    "batch_id",
			    "set",
			    "values"
			  ],
			  "properties": {
			    "batch_id": {
			      "$ref": "#/components/x-hidden/batch_id"
			    },
			    "set": {
			      "type": "array",
			      "description": "List of properties to update.",
			      "items": {
			        "type": "string",
			        "enum": [
			          "description",
			          "state",
			          "is_alive",
			          "extra"
			        ]
			      }
			    },
			    "values": {
			      "type": "object",
			      "description": "Updated values for the properties.",
			      "properties": {
			        "description": {
			          "$ref": "#/components/x-hidden/description"
			        },
			        "state": {
			          "$ref": "#/components/x-hidden/state"
			        },
			        "is_alive": {
			          "$ref": "#/components/x-hidden/is_alive"
			        },
			        "extra": {
			          "$ref": "#/components/x-hidden/extra"
			        }
			      }
			    }
			  }
			},
			"batch": {
			  "type": "object",
			  "required": [
			    "batch_id",
			    "description",
			    "state"
			  ],
			  "properties": {
			    "batch_id": {
			      "$ref": "#/components/x-hidden/batch_id"
			    },
			    "description": {
			      "$ref": "#/components/x-hidden/description"
			    },
			    "state": {
			      "$ref": "#/components/x-hidden/state"
			    },
			    "is_alive": {
			      "$ref": "#/components/x-hidden/is_alive"
			    },
			    "extra": {
			      "$ref": "#/components/x-hidden/extra"
			    }
			  }
			},
			"error": {
			  "type": "object",
			  "required": [
			    "message",
			    "self"
			  ],
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    }
			  }
			},
			"wrapped_response": {
			  "type": "object",
			  "required": [
			    "message",
			    "self"
			  ],
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    },
			    "data": {
			      "description": "The wrapped response data; should be identical to the response returned by the same request without the `wrap` parameter"
			    }
			  }
			}
    },
    "x-hidden": {
			"ventures_wrapped": {
			  "type": "object",
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    },
			    "data": {
			      "$ref": "#/components/x-hidden/ventures_array"
			    }
			  }
			},
			"ventures_array": {
			  "type": "array",
			  "items": {
			    "$ref": "#/components/schemas/venture"
			  }
			},
			"venture_wrapped": {
			  "type": "object",
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    },
			    "data": {
			      "$ref": "#/components/schemas/venture"
			    }
			  }
			},
			"orders_wrapped": {
			  "type": "object",
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    },
			    "data": {
			      "$ref": "#/components/x-hidden/orders_array"
			    }
			  }
			},
			"orders_array": {
			  "type": "array",
			  "items": {
			    "$ref": "#/components/schemas/order"
			  }
			},
			"order_wrapped": {
			  "type": "object",
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    },
			    "data": {
			      "$ref": "#/components/schemas/order"
			    }
			  }
			},
			"batches_wrapped": {
			  "type": "object",
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    },
			    "data": {
			      "$ref": "#/components/x-hidden/batches_array"
			    }
			  }
			},
			"batches_array": {
			  "type": "array",
			  "items": {
			    "$ref": "#/components/schemas/batch"
			  }
			},
			"batch_wrapped": {
			  "type": "object",
			  "properties": {
			    "message": {
			      "$ref": "#/components/x-hidden/message"
			    },
			    "self": {
			      "$ref": "#/components/x-hidden/self"
			    },
			    "data": {
			      "$ref": "#/components/schemas/batch"
			    }
			  }
			},
			"message": {
			  "type": "string",
			  "description": "Human readable summary of the response in a form presentable to end users."
			},
			"self": {
			  "type": "string",
			  "description": "Full path of the URL to the Thing or, if wrapped for meta information, the path of the request URL."
			},
			"venture_id": {
			  "type": "string",
			  "description": "Unique identifier of a Venture."
			},
			"venture_id_csv": {
			  "type": "string",
			  "description": "CSV of Venture IDs."
			},
			"order_id": {
			  "type": "string",
			  "description": "Unique identifier of an Order."
			},
			"order_id_csv": {
			  "type": "string",
			  "description": "CSV of Order IDs."
			},
			"batch_id": {
			  "type": "string",
			  "description": "Unique identifier of a Batch."
			},
			"batch_id_csv": {
			  "type": "string",
			  "description": "CSV of Batch IDs."
			},
			"description": {
			  "type": "string",
			  "description": "Presentable and human readable description of the Thing."
			},
			"state": {
			  "type": "string",
			  "description": "State of the Thing."
			},
			"is_alive": {
			  "type": "boolean",
			  "description": "True if the Thing is alive and should be included within search results."
			},
			"extra": {
			  "type": "string",
			  "description": "Additional CLOB data managed by clients."
			},
			"defaultHeaders": {
			  "Access-Control-Allow-Origin": {
			    "schema": {
			      "required": true,
			      "type": "string"
			    }
			  },
			  "Access-Control-Allow-Headers": {
			    "schema": {
			      "required": true,
			      "type": "string"
			    }
			  },
			  "Access-Control-Allow-Methods": {
			    "schema": {
			      "required": true,
			      "type": "string"
			    }
			  }
			}
    }
	}
}
